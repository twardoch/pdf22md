name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Matches version tags like v1.0.0, v2.1.3, etc.
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build on macOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper versioning
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: '5.9'
    
    - name: Get version
      id: get_version
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "dev")
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "Building version: ${VERSION}"
    
    - name: Build
      run: make build
    
    - name: Run tests
      run: make test
    
    - name: Create distribution package
      if: startsWith(github.ref, 'refs/tags/')
      run: make dist
    
    - name: Upload DMG artifact
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: pdf22md-${{ steps.get_version.outputs.VERSION }}.dmg
        path: dist/pdf22md-${{ steps.get_version.outputs.VERSION }}.dmg
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: pdf22md ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## pdf22md ${{ steps.get_version.outputs.VERSION }}
          
          ### Installation
          
          Download the DMG file below and open it. Double-click the installer package to install pdf22md to `/usr/local/bin`.
          
          ### What's New
          
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/${{ github.ref }}/CHANGELOG.md) for details.
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/pdf22md-${{ steps.get_version.outputs.VERSION }}.dmg
        asset_name: pdf22md-${{ steps.get_version.outputs.VERSION }}.dmg
        asset_content_type: application/x-apple-diskimage